aimrt:
  plugin:
    plugins:
      - name: mqtt_plugin
        path: ./libaimrt_mqtt_plugin.so
        options:
          broker_addr: tcp://127.0.0.1:1883
          client_id: example_protobuf_channel_benchmark_publisher
          max_pkg_size_k: 1024
  log: # log配置
    core_lvl: INFO # 内核日志等级，可选项：Trace/Debug/Info/Warn/Error/Fatal/Off，不区分大小写
    backends: # 日志backends
      - type: console # 控制台日志
  executor: # 执行器配置
    executors: # 当前先支持thread型，未来可根据加载的网络模块提供更多类型
      - name: work_thread_pool # 线程池
        type: asio_thread
        options:
          thread_num: 4 # 线程数，不指定则默认单线程
  channel: # 消息队列相关配置
    backends: # 消息队列后端配置
      - type: mqtt # 本地消息队列配置
    pub_topics_options:
      - topic_name: "(.*)"
        enable_backends: [mqtt]
  module: # 模块配置
    pkgs: # 要加载的动态库配置
      - path: ./libprotobuf_channel_pub_pkg.so # so/dll地址
        disable_module: [NormalPublisherModule] # 此动态库中要屏蔽的模块名称。默认全部加载
    modules: # 模块
      - name: BenchmarkPublisherModule # 模块Name接口返回的名称
        log_lvl: INFO # 模块日志级别

# 模块自定义配置，框架会为每个模块生成临时配置文件，开发者通过Configurator接口获取该配置文件路径
BenchmarkPublisherModule:
  topic_name_prefix: test_topic # topic名称前缀
  topic_number: 3 # topic数量
  channel_frq: 1000 # 发布频率，次/s
  msg_size: 1024 # 消息大小，字节
  msg_count: 5000 # 消息数量
